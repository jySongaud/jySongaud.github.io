<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在macOS上根据韦阳的教程搭建Hexo+Github博客的一些补充</title>
      <link href="/2020/07/18/post-zai-macos-shang-gen-ju-wei-yang-de-jiao-cheng-da-jian-hexo-github-bo-ke-de-yi-xie-bu-chong/"/>
      <url>/2020/07/18/post-zai-macos-shang-gen-ju-wei-yang-de-jiao-cheng-da-jian-hexo-github-bo-ke-de-yi-xie-bu-chong/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>韦阳的教程可以说非常新手友好了，我一个非编程专业的人，都可以一步步跟着做下来。</p><p>因为我用的是macOS系统，所以过程中有几个小的步骤和教程中写的不同。这篇文章意在记录下来一些我操作时感到困难的地方，给其他和我一样的小白们以参考。</p><p>为了清晰，结构上保留了原教程中步骤的标题，方便结合原文食用。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><h3 id="添加国内镜像源（人在国外，这一步省略）"><a href="#添加国内镜像源（人在国外，这一步省略）" class="headerlink" title="添加国内镜像源（人在国外，这一步省略）"></a>添加国内镜像源（人在国外，这一步省略）</h3><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><ul><li><p>原文链接直达windows系统下的下载网页，下面附的是首页的网址，应该会自动检测系统，显示相应的下载链接。<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p></li><li><p>macOS系统下，不用选择Use Git from the Windows Command Prompt</p></li><li><p>安装的是git，不是GitHub desktop，我一开始搞混了，所以记录一下。</p></li><li><p>命令提示符在macOS系统中是terminal，可以用spotlight搜索功能（command+space）输入terminal找到, 输入 git –version验证是否安装成功</p></li></ul><h3 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h3><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ul><li><p>主要问题出现在Git Bash Here 这一步。macOS系统的文件夹目录下的右键菜单没有Git Bash Here 这个选项。</p><p>假设我们新建的用来存放博客文件的文件夹名叫1234blog，要在特定目录下打开git的控制台窗口，需要选中这个文件夹，右键，找到services菜单，选择New Terminal Tab at Folder/New Terminal at Folder 都可以，打开终端之后的操作就和原文都一样了。</p></li></ul><p>图片: <a href="https://uploader.shimo.im/f/5wRHJFDUXpJJDj3u.png" target="_blank" rel="noopener">https://uploader.shimo.im/f/5wRHJFDUXpJJDj3u.png</a></p><p>没有这个选项的解决方法是：打开Finder&gt;Services&gt;Services Preferences</p><p>图片: <a href="https://uploader.shimo.im/f/g1LjJBUyIlQjXHfv.png" target="_blank" rel="noopener">https://uploader.shimo.im/f/g1LjJBUyIlQjXHfv.png</a></p><p>勾选红框中任意一项，或两项都可以。之后再按照前文所说，右键打开folder的services菜单应该就可以看到了。</p><p>图片: <a href="https://uploader.shimo.im/f/Afv64rs1zqjhkKVt.png" target="_blank" rel="noopener">https://uploader.shimo.im/f/Afv64rs1zqjhkKVt.png</a></p><h3 id="连接Github与本地"><a href="#连接Github与本地" class="headerlink" title="连接Github与本地"></a>连接Github与本地</h3><ul><li>这一步和教程中写的都一样。唯一我当时一开始没转过弯的地方是生成SSH key。以下两行command生成一个SSH key</li></ul><pre><code>ssh-keygen -t rsa -C &quot;你注册Github的邮箱&quot;cat ~/.ssh/id_rsa/pub</code></pre><p>把生成的key复制粘贴到github中新建的SSH key的框中，名字可以随便取一个，然后确认保存。</p><h3 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h3><h3 id="绑定域名（我没有买域名，跳过了该步）"><a href="#绑定域名（我没有买域名，跳过了该步）" class="headerlink" title="绑定域名（我没有买域名，跳过了该步）"></a>绑定域名（我没有买域名，跳过了该步）</h3><h3 id="备份博客源文件（我没有备份，跳过了该步）"><a href="#备份博客源文件（我没有备份，跳过了该步）" class="headerlink" title="备份博客源文件（我没有备份，跳过了该步）"></a>备份博客源文件（我没有备份，跳过了该步）</h3><h3 id="博客源代码下载"><a href="#博客源代码下载" class="headerlink" title="博客源代码下载"></a>博客源代码下载</h3><p>修改配置信息</p><ul><li>blog/_config.yml 把所有原作者的信息替换为自己的</li></ul><ol><li>Dream: 可以根据自己的职业替换成相关的</li><li>socialLink：替换信息，暂且没有放的社交账户，不删除，变为注释，便于以后添加</li><li>profile：替换信息</li><li>myProjects: 替换信息</li><li>mySkills: 替换信息</li></ol><ul><li>blog/source/friends/index.md</li></ul><ul><li><p>blog/source/CNAME 中删除原作者的域名</p></li><li><p>blog/themes/matery</p></li></ul><p>Blog/themes/matery/layout/_partial/footer.ejs</p><p><strong><u>从这一步往下，我只是完成了一部分的步骤，让博客可以运行基本的功能，所以接下来，我只把我做了的部分列出来。</u></strong></p><h3 id="修改不蒜子初始化计数"><a href="#修改不蒜子初始化计数" class="headerlink" title="修改不蒜子初始化计数"></a><strong>修改不蒜子初始化计数</strong></h3><p>在/themes/matery/layout/_partial/footer.ejs 文件中 找到这两行，把两项的值都改为0</p><pre><code>var pvcountOffset = 80000;  // 初始化首次数据var uvcountOffset = 20000;</code></pre><p>像这样</p><pre><code>var pvcountOffset = 0;  // 初始化首次数据var uvcountOffset = 0;</code></pre>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>404</title>
      <link href="/2020/07/18/404/"/>
      <url>/2020/07/18/404/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
